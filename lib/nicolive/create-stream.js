// Generated by CoffeeScript 1.11.1
var cheerio, push, request, scrapeFormValues, url;

request = require('request');

cheerio = require('cheerio');

url = require('../api').url;

push = function(data, name, value) {
  if (!name) {
    return;
  }
  if (name.slice(-2) === '[]') {
    if (data[name] == null) {
      data[name] = [];
    }
    return data[name].push(value);
  } else {
    return data[name] != null ? data[name] : data[name] = value;
  }
};

scrapeFormValues = function(body, data) {
  var $, $form, $input, $select, $textarea, checked, i, input, j, k, len, len1, len2, name, ref, ref1, ref2, select, textarea, type, value;
  if (data == null) {
    data = {};
  }
  $ = cheerio.load(body);
  $form = $('form[action=editstream]');
  ref = $form.find('input');
  for (i = 0, len = ref.length; i < len; i++) {
    input = ref[i];
    $input = $(input);
    name = $input.attr('name');
    type = $input.attr('type');
    value = $input.val();
    checked = $input.attr('checked') === 'checked';
    switch (type) {
      case 'button':
        null;
        break;
      case 'checkbox':
        if (checked) {
          push(data, name, value);
        }
        break;
      case 'radio':
        if (checked) {
          push(data, name, value);
        }
        break;
      default:
        push(data, name, value);
    }
  }
  ref1 = $form.find('select');
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    select = ref1[j];
    $select = $(select);
    name = $select.attr('name');
    value = $select.val();
    push(data, name, value);
  }
  ref2 = $form.find('textarea');
  for (k = 0, len2 = ref2.length; k < len2; k++) {
    textarea = ref2[k];
    $textarea = $(textarea);
    name = $textarea.attr('name');
    value = $textarea.text();
    push(data, name, value);
  }
  return data;
};

module.exports = function(data, callback) {
  var cookie;
  if (data == null) {
    data = {};
  }
  cookie = this.get();
  return request({
    url: url.editstream,
    headers: {
      Cookie: cookie
    }
  }, (function(_this) {
    return function(error, res, body) {
      var $, $error;
      if (error != null) {
        return callback(error);
      }
      $ = cheerio.load(body);
      $error = $('.plus strong');
      if ($error.text()) {
        return callback($error.text());
      }
      data = scrapeFormValues(body, data);
      return request({
        method: 'POST',
        url: url.editstream,
        formData: data,
        headers: {
          Cookie: cookie
        }
      }, function(error, res, body) {
        if (error != null) {
          return callback(error);
        }
        data = scrapeFormValues(body);
        data.kiyaku = 'true';
        return request({
          method: 'POST',
          url: url.editstream,
          formData: data,
          headers: {
            Cookie: cookie
          },
          followRedirect: true
        }, function(error, res, body) {
          var header, i, len, ref, uri;
          if (error != null) {
            return callback(error);
          }
          $ = cheerio.load(body);
          $error = $('#error_message');
          if (res.statusCode !== 302) {
            return callback($error.text().trim());
          }
          uri = null;
          ref = res.rawHeaders;
          for (i = 0, len = ref.length; i < len; i++) {
            header = ref[i];
            if (header.match(/^watch\/\d+/)) {
              uri = 'http://live.nicovideo.jp/' + header;
            }
          }
          return callback(null, uri);
        });
      });
    };
  })(this));
};
