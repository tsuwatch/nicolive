// Generated by CoffeeScript 1.11.1
var chalk, cheerio, h1, querystring, request, url,
  slice = [].slice;

request = require('request');

cheerio = require('cheerio');

url = require('../api').url;

querystring = require('querystring');

chalk = require('chalk');

h1 = chalk.underline.magenta;

module.exports = function() {
  var args, callback, getPostKey, i, options, ref;
  args = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), callback = arguments[i++];
  if (this.viewer == null) {
    return callback(new Error('Disconnected'));
  }
  options = (ref = args[0]) != null ? ref : {};
  getPostKey = url.getPostKey + '?' + (querystring.stringify({
    thread: this.attrs.thread,
    block_no: Math.floor((parseInt(this.playerStatus.no) + 1) / 100)
  }));
  if (options.verbose) {
    console.log(h1('Request to '), getPostKey);
  }
  return request({
    url: getPostKey,
    headers: {
      Cookie: this.get()
    }
  }, (function(_this) {
    return function(error, res, postkeyBody) {
      var postkey, ref1;
      if (error != null) {
        return callback(error);
      }
      ref1 = postkeyBody.split('='), postkey = ref1[ref1.length - 1];
      if (options.verbose) {
        console.log(h1('Got'), postkey, 'by', postkeyBody);
      }
      return callback(null, postkey);
    };
  })(this));
};
