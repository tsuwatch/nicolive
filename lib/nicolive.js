// Generated by CoffeeScript 1.11.1
var Nicolive, path,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

path = require('path');

Nicolive = (function(superClass) {
  extend(Nicolive, superClass);

  function Nicolive() {
    return Nicolive.__super__.constructor.apply(this, arguments);
  }

  Nicolive.prototype.login = require('./nicolive/login');

  Nicolive.prototype.logout = require('./nicolive/logout');

  Nicolive.prototype.ping = require('./nicolive/ping');

  Nicolive.prototype.getPlayerStatus = require('./nicolive/get-player-status');

  Nicolive.prototype.getPostKey = require('./nicolive/get-post-key');

  Nicolive.prototype.view = require('./nicolive/view');

  Nicolive.prototype.comment = require('./nicolive/comment');

  Nicolive.prototype.createStream = require('./nicolive/create-stream');

  Nicolive.prototype.fetchNickname = require('./nicolive/fetch-nickname');

  Nicolive.prototype.cli = require('./nicolive/cli');

  return Nicolive;

})(require('./session'));

module.exports = new Nicolive(path.resolve(__dirname, '..', 'nicolive.json'));
